{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b02571d8a7b8c67092f4","webpack:///./src/Branch.js","webpack:///external \"bluebird\"","webpack:///external \"babel-polyfill\"","webpack:///./src/index.js","webpack:///./src/convertToBranches.js","webpack:///./src/execute/execute.js","webpack:///./src/execute/executeChain.js","webpack:///./src/execute/executeBranch.js","webpack:///./src/execute/getBranchByCondition.js"],"names":["Branch","options","name","condition","action","value","branches","exceptionHandler","TypeError","chainBranches","slice","branch","chainBranch","push","newCondition","newAction","newName","find","getName","searchName","getBranch","Object","keys","reduce","foundBranch","branchName","findBranch","convertToBranches","convertToBranch","map","execute","currentBranch","concat","getChain","executeChain","index","length","resolve","reject","branchCondition","getCondition","then","isExceptionHandler","conditionResult","err","executeBranch","getBranches","actionResult","childBranch","getBranchByCondition","Promise"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b02571d8a7b8c67092f4","import { convertToBranches, convertToBranch } from \"./convertToBranches\";\nimport execute from \"./execute/execute\";\nexport default class Branch {\n    static create(options) {\n        return new Branch(options);\n    }\n    constructor({\n        name,\n        condition = () => true,\n        action = value => value,\n        branches = [],\n        exceptionHandler = false\n    } = {}) {\n        if (!name) {\n            throw TypeError(\"Name should be provided\");\n        }\n        this.name = name;\n        this.condition = condition;\n        this.action = action;\n        this.exceptionHandler = exceptionHandler;\n        this.branches = convertToBranches(branches);\n        this.chainBranches = [];\n    }\n    clone() {\n        return new Branch({\n            name: this.name,\n            condition: this.condition,\n            action: this.action,\n            exceptionHandler: this.exceptionHandler,\n            branches: this.branches.slice()\n        });\n    }\n    chain(branch) {\n        const chainBranch = convertToBranch(branch);\n        this.chainBranches.push(chainBranch);\n        return this;\n    }\n    getChain() {\n        return this.chainBranches;\n    }\n    isExceptionHandler() {\n        return this.exceptionHandler;\n    }\n    setCondition(newCondition) {\n        this.condition = newCondition;\n        return this;\n    }\n    setAction(newAction) {\n        this.action = newAction;\n        return this;\n    }\n    setName(newName) {\n        this.name = newName;\n        return this;\n    }\n    addBranch(branch) {\n        this.branches.push(convertToBranch(branch));\n        return this;\n    }\n    getBranches() {\n        return this.branches;\n    }\n    getBranch(name) {\n        return this.branches.find(branch => branch.getName() === name) || null;\n    }\n    findBranch(searchName) {\n        return (\n            this.getBranch(searchName) ||\n            Object.keys(this.branches).reduce(\n                (foundBranch, branchName) => foundBranch || this.branches[branchName].findBranch(searchName),\n                null\n            )\n        );\n    }\n    getAction() {\n        return this.action;\n    }\n    getCondition() {\n        return this.condition;\n    }\n    getName() {\n        return this.name;\n    }\n    execute(value) {\n        return execute(value, { branch: this });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Branch.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 3\n// module chunks = 0","import Branch from \"./Branch\";\nexport default {\n    Branch\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Branch from \"./Branch\";\nexport function convertToBranches(branches) {\n    return branches.map(convertToBranch);\n}\nexport function convertToBranch(branch) {\n    if (branch instanceof Branch) {\n        return branch;\n    } else {\n        return new Branch(branch);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/convertToBranches.js","import executeChain from \"./executeChain\";\nexport default function execute(value, { branch: currentBranch }) {\n    return executeChain([currentBranch].concat(currentBranch.getChain()), value);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/execute/execute.js","import Promise from \"bluebird\";\nimport executeBranch from \"./executeBranch\";\nexport default function executeChain(branches, value, index = 0, exceptionHandler = false) {\n    if (branches.length <= index) {\n        if (exceptionHandler === false) {\n            return Promise.resolve(value);\n        } else {\n            return Promise.reject(value);\n        }\n    }\n    const currentBranch = branches[index];\n    const branchCondition = currentBranch.getCondition();\n    return Promise.resolve()\n        .then(() => currentBranch.isExceptionHandler() === exceptionHandler && branchCondition(value))\n        .then(conditionResult => {\n            if (conditionResult) {\n                exceptionHandler = false;\n                return executeBranch(value, { branch: currentBranch });\n            } else {\n                return value;\n            }\n        })\n        .then(\n            value => executeChain(branches, value, index + 1, exceptionHandler),\n            err => executeChain(branches, err, index + 1, true)\n        );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/execute/executeChain.js","import Promise from \"bluebird\";\nimport getBranchByCondition from \"./getBranchByCondition\";\nexport default function executeBranch(value, { branch: currentBranch }) {\n    return Promise.resolve()\n        .then(() => currentBranch.action(value))\n        .then(\n            actionResult =>\n                getBranchByCondition(currentBranch.getBranches(), actionResult, 0, false).then(\n                    childBranch => (childBranch ? executeBranch(actionResult, { branch: childBranch }) : actionResult)\n                ),\n            err =>\n                getBranchByCondition(currentBranch.getBranches(), err, 0, true).then(\n                    childBranch => (childBranch ? executeBranch(err, { branch: childBranch }) : Promise.reject(err))\n                )\n        );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/execute/executeBranch.js","export default function getBranchByCondition(branches, value, index = 0, exceptionHandler = false) {\n    if (branches.length <= index) {\n        return Promise.resolve(null);\n    }\n    const branch = branches[index];\n    const branchCondition = branch.getCondition();\n    return Promise.resolve()\n        .then(() => branch.isExceptionHandler() === exceptionHandler && branchCondition(value))\n        .then(\n            conditionResult =>\n                conditionResult\n                    ? Promise.resolve(branch)\n                    : getBranchByCondition(branches, value, index + 1, exceptionHandler)\n        );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/execute/getBranchByCondition.js"],"sourceRoot":""}